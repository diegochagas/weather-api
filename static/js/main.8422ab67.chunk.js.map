{"version":3,"sources":["store/modules/weather/actions.js","components/SearchBar/styles.js","components/SearchBar/index.js","components/Chart/index.js","components/WeatherList/styles.js","components/WeatherList/index.js","store/modules/weather/reducer.js","store/modules/rootReducer.js","services/api.js","store/modules/weather/sagas.js","store/modules/rootSaga.js","store/index.js","store/createStore.js","styles/global.js","App.js","index.js"],"names":["types","UPDATE_WEATHER_REQUEST","UPDATE_WEATHER_SUCCESS","UPDATE_WEATHER_FAILURE","Container","styled","div","SearchBar","useState","term","setTerm","errorMessage","setErrorMessage","dispatch","useDispatch","className","type","placeholder","value","onChange","event","target","onClick","a","async","preventDefault","city","payload","Chart","props","height","width","data","color","_","round","sum","length","units","Table","table","WeatherList","weathers","useSelector","state","error","failureWeather","undefined","map","weather","temps","list","cityWeather","main","temp","pressures","pressure","humidities","humidity","key","id","name","message","INITIAL_STATE","combineReducers","action","err","API_KEY","api","axios","create","baseURL","fetchWeather","call","get","response","put","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","store","reducers","middlewares","enhancer","applyMiddleware","createStore","rootReducer","run","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8422ab67.chunk.js","sourcesContent":["export const types = {\n  UPDATE_WEATHER_REQUEST: '@user/UPDATE_WEATHER_REQUEST',\n  UPDATE_WEATHER_SUCCESS: '@user/UPDATE_WEATHER_SUCCESS',\n  UPDATE_WEATHER_FAILURE: '@user/UPDATE_WEATHER_FAILURE',\n};\n\nexport function updateWeatherRequest(city) {\n  return {\n    type: types.UPDATE_WEATHER_REQUEST,\n    payload: { city },\n  };\n}\n\nexport function updateWeatherSuccess(weather) {\n  return {\n    type: types.UPDATE_WEATHER_SUCCESS,\n    payload: { weather },\n  };\n}\n\nexport function updateWeatherFailure(err) {\n  return {\n    type: types.UPDATE_WEATHER_FAILURE,\n    payload: { err },\n  };\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px;\n\n  form {\n    max-width: 768px;\n    margin: 0px auto;\n\n    input {\n      padding: 24px 20px;\n    }\n\n    button {\n      padding-top: 12px;\n      padding-bottom: 12px;\n    }\n  }\n\n  .alert {\n    max-width: 768px;\n    margin: 0px auto;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { updateWeatherRequest } from '../../store/modules/weather/actions';\n\nimport { Container } from './styles';\n\nexport default function SearchBar() {\n  const [term, setTerm] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const dispatch = useDispatch();\n\n  function onInputChange(event) {\n    setTerm(event.target.value);\n  }\n\n  async function handleSearch(event) {\n    event.preventDefault();\n\n    if (term) {\n      await dispatch(updateWeatherRequest(term));\n\n      setTerm('');\n\n      setErrorMessage('');\n    }\n\n    if (term === '') {\n      setErrorMessage('Write a New Zealand city name');\n    }\n  }\n\n  return (\n    <Container>\n      <form className=\"input-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Get a five-day forecast in a New Zealand city\"\n          value={term}\n          onChange={onInputChange}\n        />\n\n        <span className=\"input-group-btn\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-secondary\"\n            onClick={handleSearch}\n          >\n            Submit\n          </button>\n        </span>\n      </form>\n\n      {errorMessage ? (\n        <div className=\"alert alert-danger\">{errorMessage}</div>\n      ) : null}\n    </Container>\n  );\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Sparklines,\n  SparklinesLine,\n  SparklinesReferenceLine,\n} from 'react-sparklines';\n\n// import { Container } from './styles';\n\nexport default function Chart(props) {\n  function average(data) {\n    return _.round(_.sum(data) / data.length);\n  }\n\n  return (\n    <td>\n      <div>\n        <Sparklines height={120} width={180} data={props.data}>\n          <SparklinesLine color={props.color} />\n          <SparklinesReferenceLine type=\"avg\" />\n        </Sparklines>\n        <div>\n          {average(props.data)} {props.units}\n        </div>\n      </div>\n    </td>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  td,\n  th {\n    vertical-align: middle !important;\n    text-align: center !important;\n  }\n\n  td:first-of-type,\n  td:first-of-type > div {\n    height: 200px;\n    width: 250px;\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport Chart from '../Chart';\n// import GoogleMapComponent from '../GoogleMapComponent';\n\nimport { Table } from './styles';\n\nexport default function WeatherList() {\n  const weathers = useSelector(state => state.weathers);\n  const error = useSelector(state => state.failureWeather);\n\n  if (weathers !== undefined && weathers.length > 0)\n    return (\n      <Table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>City</th>\n            <th>Temperature (C)</th>\n            <th>Pressure (hPa)</th>\n            <th>Humidity (%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {weathers.map(weather => {\n            const temps = _.map(\n              weather.list.map(cityWeather => cityWeather.main.temp),\n              temp => temp - 273.15\n            );\n            const pressures = weather.list.map(\n              cityWeather => cityWeather.main.pressure\n            );\n            const humidities = weather.list.map(\n              cityWeather => cityWeather.main.humidity\n            );\n            // const { lon, lat } = weather.city.coord;\n\n            return (\n              <tr key={weather.city.id}>\n                <td>\n                  {weather.city.name}\n\n                  {/* <GoogleMapComponent lng={lon} lat={lat} /> */}\n                </td>\n                <Chart data={temps} color=\"orange\" units=\"C\" />\n                <Chart data={pressures} color=\"green\" units=\"hPa\" />\n                <Chart data={humidities} color=\"black\" units=\"%\" />\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n\n  if (error.message) {\n    return (\n      <div className=\"alert alert-danger\">Write a New Zealand city name</div>\n    );\n  }\n\n  return null;\n}\n","import { types } from './actions';\n\nconst INITIAL_STATE = [];\n\nexport function weathers(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case types.UPDATE_WEATHER_SUCCESS:\n      return [action.payload.weather, ...state];\n    default:\n      return state;\n  }\n}\n\nexport function failureWeather(state = {}, action) {\n  switch (action.type) {\n    case types.UPDATE_WEATHER_FAILURE:\n      return action.payload.err;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport { weathers, failureWeather } from './weather/reducer';\n\nexport default combineReducers({\n  weathers,\n  failureWeather,\n});\n","import axios from 'axios';\n\nexport const API_KEY = '66a80829085f138206554340f458199f';\n\nconst api = axios.create({\n  baseURL: 'http://api.openweathermap.org/data/2.5',\n});\n\nexport default api;\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\n\nimport api, { API_KEY } from '../../../services/api';\n\nimport { types, updateWeatherSuccess, updateWeatherFailure } from './actions';\n\nexport function* fetchWeather({ payload }) {\n  try {\n    const { city } = payload;\n\n    const response = yield call(\n      api.get,\n      `forecast?appid=${API_KEY}&q=${city},nz`\n    );\n\n    yield put(updateWeatherSuccess(response.data));\n  } catch (err) {\n    yield put(updateWeatherFailure(err));\n  }\n}\n\nexport default all([takeLatest(types.UPDATE_WEATHER_REQUEST, fetchWeather)]);\n","import { all } from 'redux-saga/effects';\n\nimport weather from './weather/sagas';\n\nexport default function* rootSaga() {\n  return yield all([weather]);\n}\n","import createSagaMiddleware from 'redux-saga';\n\nimport createStore from './createStore';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware({});\n\nconst middlewares = [sagaMiddleware];\n\nconst store = createStore(rootReducer, middlewares);\n\nsagaMiddleware.run(rootSaga);\n\nexport { store };\n","import { createStore, compose, applyMiddleware } from 'redux';\n\nexport default (reducers, middlewares) => {\n  const enhancer =\n    process.env.NODE_ENV === 'development'\n      ? compose(applyMiddleware(...middlewares))\n      : applyMiddleware(...middlewares);\n\n  return createStore(reducers, enhancer);\n};\n","import { createGlobalStyle } from 'styled-components';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n  *:focus {\n    outline: 0;\n  }\n  html, body, #root {\n    height: 100%;\n  }\n  body {\n    -webkit-font-smoothing: antialiased;\n  }\n  body, input, button {\n    font: 14px 'Roboto', sans-serif;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul {\n    list-style: none;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport SearchBar from './components/SearchBar';\nimport WeatherList from './components/WeatherList';\n\nimport { store } from './store';\n\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SearchBar />\n\n      <GlobalStyle />\n\n      <WeatherList />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}